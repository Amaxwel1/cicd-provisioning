---
# Source: gitea/templates/postgresql-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  annotations:
    template.openshift.io/expose-database_name: '{.data[''database-name'']}'
    template.openshift.io/expose-password: '{.data[''database-password'']}'
    template.openshift.io/expose-username: '{.data[''database-user'']}'
  name: "gitea-db"
stringData:
  database-name: "gitea-db"
  database-password: "S00perSekretP@ssw0rd"
  database-user: "gitea"
---
# Source: gitea/templates/configmap.yaml
apiVersion: v1
data:
  app.ini: |
    APP_NAME = Gitea: Git with a cup of tea
    RUN_USER = gitea
    RUN_MODE = prod

    [security]
    INTERNAL_TOKEN = "BIHTXpWreGhJzPKRvaZWDEQjqLAKnRrbQuxSmzTaEyiAjwhBTgODzlkmvPiOBWpDbXRRWmOCqTcLiSCCldgmpXgnhMXIrbcmfglrzXKyRE"
    INSTALL_LOCK   = true
    SECRET_KEY     = "fIEYIFIk"
    PASSWORD_COMPLEXITY = off

    [oauth2]
    ENABLE = false

    [database]
    DB_TYPE  = postgres
    HOST     = gitea-db:5432
    NAME     = gitea-db
    USER     = gitea
    PASSWD   = S00perSekretP@ssw0rd
    SSL_MODE = disable

    [repository]
    ROOT = /gitea-repositories

    [server]
    ROOT_URL         = http://gitea-oqss-cicd.apps.middleware.rhbr-lab.com/
    SSH_DOMAIN       = gitea-oqss-cicd.apps.middleware.rhbr-lab.com
    DOMAIN           = gitea-oqss-cicd.apps.middleware.rhbr-lab.com
    HTTP_PORT        = 3000
    SSH_PORT         = 2022
    DISABLE_SSH      = true
    START_SSH_SERVER = false
    LFS_START_SERVER = false
    OFFLINE_MODE     = false

    [mailer]
    ENABLED = false

    [service]
    REGISTER_EMAIL_CONFIRM            = false
    ENABLE_NOTIFY_MAIL                = false
    DISABLE_REGISTRATION              = false
    ENABLE_CAPTCHA                    = false
    REQUIRE_SIGNIN_VIEW               = false
    DEFAULT_KEEP_EMAIL_PRIVATE        = false
    DEFAULT_ALLOW_CREATE_ORGANIZATION = true
    DEFAULT_ENABLE_TIMETRACKING       = true
    NO_REPLY_ADDRESS                  = noreply.example.org

    [picture]
    DISABLE_GRAVATAR        = false
    ENABLE_FEDERATED_AVATAR = true

    [openid]
    ENABLE_OPENID_SIGNIN = false
    ENABLE_OPENID_SIGNUP = false

    [session]
    PROVIDER = file

    [log]
    MODE      = file
    LEVEL     = Info
    ROOT_PATH = /home/gitea/log

    [markup.asciidoc]
    ENABLED = true
    FILE_EXTENSIONS = .adoc,.asciidoc
    RENDER_COMMAND = "asciidoc --out-file=- -"
    IS_INPUT_FILE = false
kind: ConfigMap
metadata:
  name: gitea-config
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
---
# Source: gitea/templates/persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: "gitea-repositories"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "5Gi"
---
# Source: gitea/templates/postgresql-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: "gitea-db"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: gitea/templates/postgresql-svc.yaml
apiVersion: v1
kind: Service
metadata:
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  annotations:
    template.openshift.io/expose-uri: >-
      postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
  name: "gitea-db"
spec:
  ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: "gitea-db"
  sessionAffinity: None
  type: ClusterIP
---
# Source: gitea/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: The Gitea server's http port
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: gitea
spec:
  ports:
  - name: 3000-tcp
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: gitea
    deploymentconfig: gitea
  sessionAffinity: None
  type: ClusterIP
---
# Source: gitea/templates/deploymentconfig.yaml
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  generation: 1
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: gitea
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: gitea
    deploymentconfig: gitea
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gitea
        deploymentconfig: gitea
    spec:
      containers:
      - image: ' '
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: gitea
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /gitea-repositories
          name: gitea-repositories
        - mountPath: /home/gitea/conf
          name: gitea-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: gitea-repositories
        persistentVolumeClaim:
          claimName: "gitea-repositories"
      - configMap:
          defaultMode: 420
          items:
          - key: app.ini
            path: app.ini
          name: gitea-config
        name: gitea-config
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
        - gitea
      from:
        kind: ImageStreamTag
        name: 'gitea:latest'
        namespace: oqss-cicd
      lastTriggeredImage: ''
    type: ImageChange
---
# Source: gitea/templates/postgresql-dc.yaml
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: "gitea-db"
spec:
  replicas: 1
  selector:
    name: "gitea-db"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: "gitea-db"
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
            timeoutSeconds: 10
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: "gitea-db"
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: "gitea-db"
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: "gitea-db"
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: "gitea-db"
          image: ' '
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: "gitea-db"
          persistentVolumeClaim:
            claimName: "gitea-db"
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          name: 'postgresql:latest'
          namespace: openshift
        lastTriggeredImage: ''
      type: ImageChange
    - type: ConfigChange
---
# Source: gitea/templates/imagestream.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: gitea
spec:
  lookupPolicy:
    local: false
  tags:
  - annotations:
      openshift.io/imported-from: "quay.io/gpte-devops-automation/gitea:latest"
    from:
      kind: DockerImage
      name: "quay.io/gpte-devops-automation/gitea:latest"
    generation: 2
    importPolicy: {}
    name: latest
    referencePolicy:
      type: Local
---
# Source: gitea/templates/route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    description: Gitea's HTTP route
  
  labels:
    app: gitea
    app.kubernetes.io/component: gitea
    app.kubernetes.io/instance: gitea
    app.kubernetes.io/name: gitea
    app.kubernetes.io/part-of: gitea
    generator: helm
  name: gitea
spec:
  host: gitea-oqss-cicd.apps.middleware.rhbr-lab.com
  to:
    kind: Service
    name: gitea
    weight: 100
  wildcardPolicy: None
